{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../payment.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/progress-spinner\";\n\nfunction PaymentDetailsFormComponent_div_0_div_13_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(field_r3.validation.message);\n  }\n}\n\nfunction PaymentDetailsFormComponent_div_0_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-form-field\", 10);\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 11);\n    i0.ɵɵtemplate(5, PaymentDetailsFormComponent_div_0_div_13_mat_error_5_Template, 2, 1, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const field_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(field_r3.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", field_r3.type)(\"formControlName\", field_r3.formControlName)(\"required\", field_r3.validation.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.form.controls[field_r3.formControlName].errors == null ? null : ctx_r2.form.controls[field_r3.formControlName].errors.required);\n  }\n}\n\nfunction PaymentDetailsFormComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"add_shopping_cart\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"async\");\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 4);\n    i0.ɵɵelementStart(9, \"p\", 5);\n    i0.ɵɵtext(10, \"Please, fill out required fields!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 4);\n    i0.ɵɵelementStart(12, \"form\", 6);\n    i0.ɵɵlistener(\"ngSubmit\", function PaymentDetailsFormComponent_div_0_Template_form_ngSubmit_12_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onFormSubmit();\n    });\n    i0.ɵɵtemplate(13, PaymentDetailsFormComponent_div_0_div_13_Template, 6, 5, \"div\", 7);\n    i0.ɵɵelementStart(14, \"div\", 8);\n    i0.ɵɵelementStart(15, \"button\", 9);\n    i0.ɵɵtext(16, \"PAY\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\"\", (tmp_0_0 = i0.ɵɵpipeBind1(6, 4, ctx_r0.paymentService.paymentDetails$)) == null ? null : tmp_0_0.currency, \" \", (tmp_0_0 = i0.ɵɵpipeBind1(7, 6, ctx_r0.paymentService.paymentDetails$)) == null ? null : tmp_0_0.amount.toFixed(2), \"\");\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.formFields);\n  }\n}\n\nfunction PaymentDetailsFormComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelement(1, \"mat-spinner\", 14);\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport class PaymentDetailsFormComponent {\n  constructor(activatedRoute, paymentService, router) {\n    this.activatedRoute = activatedRoute;\n    this.paymentService = paymentService;\n    this.router = router;\n    this.sub = new Subscription();\n    this.form = new FormGroup({});\n  }\n\n  ngOnInit() {\n    this.sub = this.activatedRoute.params.subscribe(params => {\n      this.paymentMethodName = params['paymentMethod'];\n\n      if (!this.paymentService.paymentDetails$.value) {\n        this.paymentService.getPaymentDetails().subscribe(res => {\n          this.paymentService.paymentDetails$.next(res[0]);\n          this.buildPaymentForm();\n        });\n      } else {\n        this.buildPaymentForm();\n      }\n    });\n  }\n\n  buildPaymentForm() {\n    let paymentMethod = this.paymentService.paymentDetails$.value.paymentMethods.find(x => x.name == this.paymentMethodName);\n    this.formFields = paymentMethod.formFields;\n    this.formFields.forEach(field => {\n      this.form.addControl(field.formControlName, new FormControl(null, field.validation.required ? Validators.required : null));\n    });\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  onFormSubmit() {\n    let paymentValues = this.paymentService.paymentDetails$.value;\n    let paymentData = {\n      amount: paymentValues.amount,\n      currency: paymentValues.currency,\n      paymentMethod: this.paymentMethodName,\n      paymentMethodValues: this.form.value\n    };\n    console.log('Payment: ', paymentData);\n\n    if (this.form.valid) {\n      this.paymentService.addPayment(paymentData).subscribe(res => {\n        this.router.navigate(['/payment-success']);\n      });\n    }\n  }\n\n}\n\nPaymentDetailsFormComponent.ɵfac = function PaymentDetailsFormComponent_Factory(t) {\n  return new (t || PaymentDetailsFormComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PaymentService), i0.ɵɵdirectiveInject(i1.Router));\n};\n\nPaymentDetailsFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PaymentDetailsFormComponent,\n  selectors: [[\"app-payment-details-form\"]],\n  decls: 4,\n  vars: 6,\n  consts: [[\"fxLayout\", \"row wrap\", 4, \"ngIf\"], [\"fxFill\", \"\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", \"class\", \"p-3\", 4, \"ngIf\"], [\"fxLayout\", \"row wrap\"], [\"fxFlex\", \"100\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"fxFlex\", \"100\"], [1, \"text-center\"], [3, \"formGroup\", \"ngSubmit\"], [4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"end center\", 1, \"p-3\"], [\"mat-raised-button\", \"\", \"type\", \"submit\", \"color\", \"primary\"], [\"appearance\", \"outline\", 1, \"w-100\"], [\"matInput\", \"\", 3, \"type\", \"formControlName\", \"required\"], [4, \"ngIf\"], [\"fxFill\", \"\", \"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"p-3\"], [\"diameter\", \"70\"]],\n  template: function PaymentDetailsFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, PaymentDetailsFormComponent_div_0_Template, 17, 8, \"div\", 0);\n      i0.ɵɵpipe(1, \"async\");\n      i0.ɵɵtemplate(2, PaymentDetailsFormComponent_div_2_Template, 2, 0, \"div\", 1);\n      i0.ɵɵpipe(3, \"async\");\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(1, 2, ctx.paymentService.paymentDetails$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(3, 4, ctx.paymentService.paymentDetails$));\n    }\n  },\n  directives: [i3.NgIf, i4.DefaultLayoutDirective, i4.DefaultFlexDirective, i4.DefaultLayoutAlignDirective, i5.MatIcon, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.FormGroupDirective, i3.NgForOf, i7.MatButton, i8.MatFormField, i8.MatLabel, i9.MatInput, i6.DefaultValueAccessor, i6.NgControlStatus, i6.FormControlName, i6.RequiredValidator, i8.MatError, i4.FlexFillDirective, i10.MatSpinner],\n  pipes: [i3.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwYXltZW50LWRldGFpbHMtZm9ybS5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["/home/elgunb/Masaüstü/payment/payment_gateway/src/app/payment-details-form/payment-details-form.component.ts","/home/elgunb/Masaüstü/payment/payment_gateway/src/app/payment-details-form/payment-details-form.component.html"],"names":[],"mappings":"AACA,SAAS,WAAT,EAAsB,SAAtB,EAAiC,UAAjC,QAAmD,gBAAnD;AAEA,SAAS,YAAT,QAA6B,MAA7B;;;;;;;;;;;;;;;ACcoB,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAyE,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAA4B,IAAA,EAAA,CAAA,YAAA;;;;;AAA5B,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,UAAA,CAAA,OAAA;;;;;;AAJjF,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,EAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,WAAA;AAAW,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;AAAe,IAAA,EAAA,CAAA,YAAA;AAC1B,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA;AACA,IAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,6DAAA,EAAA,CAAA,EAAA,CAAA,EAAA,WAAA,EAAA,EAAA;AACJ,IAAA,EAAA,CAAA,YAAA;AACJ,IAAA,EAAA,CAAA,YAAA;;;;;;AAJmB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,iBAAA,CAAA,QAAA,CAAA,KAAA;AACK,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,QAAA,CAAA,IAAA,EAAmB,iBAAnB,EAAmB,QAAA,CAAA,eAAnB,EAAmB,UAAnB,EAAmB,QAAA,CAAA,UAAA,CAAA,QAAnB;AACJ,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,eAAA,EAAA,MAAA,IAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,QAAA,CAAA,eAAA,EAAA,MAAA,CAAA,QAAA;;;;;;;;AAjBhC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAEI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,UAAA;AAAU,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA,EAAA,mBAAA;AAAiB,IAAA,EAAA,CAAA,YAAA;AAC3B,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA;AAAG,IAAA,EAAA,CAAA,MAAA,CAAA,CAAA;;;AAA0H,IAAA,EAAA,CAAA,YAAA;AACjI,IAAA,EAAA,CAAA,YAAA;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,GAAA,EAAA,CAAA;AAAuB,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,mCAAA;AAAiC,IAAA,EAAA,CAAA,YAAA;AAC5D,IAAA,EAAA,CAAA,YAAA;AAEA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,MAAA,EAAA,CAAA;AAAyB,IAAA,EAAA,CAAA,UAAA,CAAA,UAAA,EAAA,SAAA,oEAAA,GAAA;AAAA,MAAA,EAAA,CAAA,aAAA,CAAA,GAAA;AAAA,YAAA,MAAA,GAAA,EAAA,CAAA,aAAA,EAAA;AAAA,aAAA,MAAA,CAAA,YAAA,EAAA;AAAA,KAAA;AACrB,IAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,iDAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;AAOA,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,KAAA,EAAA,CAAA;AACI,IAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,QAAA,EAAA,CAAA;AAAwD,IAAA,EAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA;AAAG,IAAA,EAAA,CAAA,YAAA;AAC/D,IAAA,EAAA,CAAA,YAAA;AACJ,IAAA,EAAA,CAAA,YAAA;AACJ,IAAA,EAAA,CAAA,YAAA;AAEJ,IAAA,EAAA,CAAA,YAAA;;;;;;AAtBW,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,EAAA,CAAA,OAAA,GAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,QAAA,EAAA,GAAA,EAAA,CAAA,OAAA,GAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,MAAA,CAAA,cAAA,CAAA,eAAA,CAAA,KAAA,IAAA,GAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,OAAA,CAAA,CAAA,CAAA,EAAA,EAAA;AAQG,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,WAAA,EAAA,MAAA,CAAA,IAAA;AACqB,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,IAAA,EAAA,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,UAAA;;;;;;AAenC,IAAA,EAAA,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA;AACI,IAAA,EAAA,CAAA,SAAA,CAAA,CAAA,EAAA,aAAA,EAAA,EAAA;AACJ,IAAA,EAAA,CAAA,YAAA;;;;ADnBA,OAAM,MAAO,2BAAP,CAAkC;AAKtC,EAAA,WAAA,CAAoB,cAApB,EAA2D,cAA3D,EAAiG,MAAjG,EAA8G;AAA1F,SAAA,cAAA,GAAA,cAAA;AAAuC,SAAA,cAAA,GAAA,cAAA;AAAsC,SAAA,MAAA,GAAA,MAAA;AAJzF,SAAA,GAAA,GAAoB,IAAI,YAAJ,EAApB;AACR,SAAA,IAAA,GAAO,IAAI,SAAJ,CAAc,EAAd,CAAP;AAGmH;;AAEnH,EAAA,QAAQ,GAAA;AACN,SAAK,GAAL,GAAW,KAAK,cAAL,CAAoB,MAApB,CAA2B,SAA3B,CAAsC,MAAD,IAAe;AAC7D,WAAK,iBAAL,GAAyB,MAAM,CAAC,eAAD,CAA/B;;AAEA,UAAI,CAAC,KAAK,cAAL,CAAoB,eAApB,CAAoC,KAAzC,EAAgD;AAC9C,aAAK,cAAL,CAAoB,iBAApB,GAAwC,SAAxC,CAAmD,GAAD,IAAY;AAC5D,eAAK,cAAL,CAAoB,eAApB,CAAoC,IAApC,CAAyC,GAAG,CAAC,CAAD,CAA5C;AACA,eAAK,gBAAL;AACD,SAHD;AAID,OALD,MAMI;AACF,aAAK,gBAAL;AACD;AAEF,KAbU,CAAX;AAcD;;AAED,EAAA,gBAAgB,GAAA;AACd,QAAI,aAAa,GAAG,KAAK,cAAL,CAAoB,eAApB,CAAoC,KAApC,CAA0C,cAA1C,CAAyD,IAAzD,CAA+D,CAAD,IAAW,CAAC,CAAC,IAAF,IAAU,KAAK,iBAAxF,CAApB;AACA,SAAK,UAAL,GAAkB,aAAa,CAAC,UAAhC;AACA,SAAK,UAAL,CAAgB,OAAhB,CAAyB,KAAD,IAAa;AACnC,WAAK,IAAL,CAAU,UAAV,CAAqB,KAAK,CAAC,eAA3B,EAA4C,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,KAAK,CAAC,UAAN,CAAiB,QAAjB,GAA4B,UAAU,CAAC,QAAvC,GAAkD,IAAxE,CAA5C;AACD,KAFD;AAGD;;AAED,EAAA,WAAW,GAAA;AACT,SAAK,GAAL,CAAS,WAAT;AACD;;AAED,EAAA,YAAY,GAAA;AACV,QAAI,aAAa,GAAG,KAAK,cAAL,CAAoB,eAApB,CAAoC,KAAxD;AACA,QAAI,WAAW,GAAG;AAChB,MAAA,MAAM,EAAE,aAAa,CAAC,MADN;AAEhB,MAAA,QAAQ,EAAE,aAAa,CAAC,QAFR;AAGhB,MAAA,aAAa,EAAE,KAAK,iBAHJ;AAIhB,MAAA,mBAAmB,EAAE,KAAK,IAAL,CAAU;AAJf,KAAlB;AAMA,IAAA,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAyB,WAAzB;;AACA,QAAG,KAAK,IAAL,CAAU,KAAb,EAAmB;AACjB,WAAK,cAAL,CAAoB,UAApB,CAA+B,WAA/B,EAA4C,SAA5C,CAAuD,GAAD,IAAY;AAChE,aAAK,MAAL,CAAY,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,OAFD;AAGD;AACF;;AAlDqC;;;mBAA3B,2B,EAA2B,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,cAAA,C,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,C;AAAA,C;;;QAA3B,2B;AAA2B,EAAA,SAAA,EAAA,CAAA,CAAA,0BAAA,CAAA,C;AAAA,EAAA,KAAA,EAAA,C;AAAA,EAAA,IAAA,EAAA,C;AAAA,EAAA,MAAA,EAAA,CAAA,CAAA,UAAA,EAAA,UAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,EAAA,eAAA,EAAA,eAAA,EAAA,OAAA,EAAA,KAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,QAAA,EAAA,KAAA,EAAA,UAAA,EAAA,KAAA,EAAA,eAAA,EAAA,sBAAA,CAAA,EAAA,CAAA,QAAA,EAAA,KAAA,CAAA,EAAA,CAAA,CAAA,EAAA,aAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,UAAA,EAAA,KAAA,EAAA,eAAA,EAAA,YAAA,EAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,YAAA,EAAA,SAAA,EAAA,CAAA,EAAA,OAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,MAAA,EAAA,iBAAA,EAAA,UAAA,CAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,QAAA,EAAA,EAAA,EAAA,UAAA,EAAA,KAAA,EAAA,eAAA,EAAA,eAAA,EAAA,CAAA,EAAA,KAAA,CAAA,EAAA,CAAA,UAAA,EAAA,IAAA,CAAA,C;AAAA,EAAA,QAAA,EAAA,SAAA,oCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,QAAA,EAAA,GAAA,CAAA,EAAA;ACXxC,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,EAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;;AA4BA,MAAA,EAAA,CAAA,UAAA,CAAA,CAAA,EAAA,0CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA;;;;;AA5BM,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,cAAA,CAAA,eAAA,CAAA;AA4BA,MAAA,EAAA,CAAA,SAAA,CAAA,CAAA;AAAA,MAAA,EAAA,CAAA,UAAA,CAAA,MAAA,EAAA,CAAA,EAAA,CAAA,WAAA,CAAA,CAAA,EAAA,CAAA,EAAA,GAAA,CAAA,cAAA,CAAA,eAAA,CAAA","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { PaymentService } from '../payment.service';\n\n@Component({\n  selector: 'app-payment-details-form',\n  templateUrl: './payment-details-form.component.html',\n  styleUrls: ['./payment-details-form.component.scss']\n})\nexport class PaymentDetailsFormComponent implements OnInit {\n  private sub: Subscription = new Subscription; \n  form = new FormGroup({});\n  formFields:any;\n  paymentMethodName:any;\n  constructor(private activatedRoute: ActivatedRoute, public paymentService:PaymentService, public router:Router) { }\n\n  ngOnInit(): void {\n    this.sub = this.activatedRoute.params.subscribe((params:any) => { \n      this.paymentMethodName = params['paymentMethod']; \n\n      if (!this.paymentService.paymentDetails$.value) {\n        this.paymentService.getPaymentDetails().subscribe((res:any) => { \n          this.paymentService.paymentDetails$.next(res[0]); \n          this.buildPaymentForm();  \n        })\n      }\n      else{ \n        this.buildPaymentForm(); \n      } \n\n    });\n  } \n\n  buildPaymentForm(){\n    let paymentMethod = this.paymentService.paymentDetails$.value.paymentMethods.find((x:any) => x.name == this.paymentMethodName); \n    this.formFields = paymentMethod.formFields;\n    this.formFields.forEach((field:any)=>{ \n      this.form.addControl(field.formControlName, new FormControl(null, field.validation.required ? Validators.required : null))\n    })\n  }\n\n  ngOnDestroy(){\n    this.sub.unsubscribe(); \n  }\n \n  onFormSubmit(){ \n    let paymentValues = this.paymentService.paymentDetails$.value; \n    let paymentData = { \n      amount: paymentValues.amount,\n      currency: paymentValues.currency,\n      paymentMethod: this.paymentMethodName,\n      paymentMethodValues: this.form.value\n    } \n    console.log('Payment: ', paymentData);\n    if(this.form.valid){ \n      this.paymentService.addPayment(paymentData).subscribe((res:any) => { \n        this.router.navigate(['/payment-success']);\n      })  \n    }\n  }\n\n}\n","<div *ngIf=\"(paymentService.paymentDetails$ | async)\" fxLayout=\"row wrap\"> \n\n    <div fxFlex=\"100\" fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n        <mat-icon>add_shopping_cart</mat-icon>\n        <b>{{ (paymentService.paymentDetails$ | async)?.currency }} {{ (paymentService.paymentDetails$ | async)?.amount.toFixed(2) }}</b>\n    </div>\n\n    <div fxFlex=\"100\">\n        <p class=\"text-center\">Please, fill out required fields!</p>\n    </div>  \n    \n    <div fxFlex=\"100\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"onFormSubmit()\">\n            <div *ngFor=\"let field of this.formFields\"> \n                <mat-form-field appearance=\"outline\" class=\"w-100\"> \n                    <mat-label>{{field.label}}</mat-label>\n                    <input matInput [type]=\"field.type\" [formControlName]=\"field.formControlName\" [required]=\"field.validation.required\"> \n                    <mat-error *ngIf=\"form.controls[field.formControlName].errors?.required\">{{field.validation.message}}</mat-error>   \n                </mat-form-field>  \n            </div>\n            <div fxLayout=\"row\"  fxLayoutAlign=\"end center\" class=\"p-3\">\n                <button mat-raised-button type=\"submit\" color=\"primary\">PAY</button>\n            </div>\n        </form> \n    </div>\n\n</div>\n\n<div *ngIf=\"!(paymentService.paymentDetails$ | async)\" fxFill  fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"p-3\">\n    <mat-spinner diameter=\"70\"></mat-spinner>\n</div>   "],"sourceRoot":""},"metadata":{},"sourceType":"module"}